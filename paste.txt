import React, { useEffect, useState } from 'react';
import { View, Text } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import {
  createDrawerNavigator,
  DrawerContentScrollView,
  DrawerItem,
} from '@react-navigation/drawer';
import 'react-native-gesture-handler';
import { HeaderNotificationUser } from '../components/HeaderIcons';
import BottomTabNavigator from '../components/BottomTabNavigator';
import MyWorkSpace from './MyWorkSpace';
import DrawerButton from '../components/DrawerButton';
import Attendance from './Attendance';
import { getFocusedRouteNameFromRoute } from '@react-navigation/native';
import DetailScreen from './DetailScreen';

<BottomTabNavigator />;

const RootScreen = () => {
  const Drawer = createDrawerNavigator();

  const [loading, setLoading] = useState([]);

  function CustomDrawerContent(props) {
    return (
      <DrawerContentScrollView {...props}>
        <View>
          <Text>Drawer</Text>
        </View>

        <DrawerItem
          label="Home Screen"
          onPress={() =>
            props.navigation.navigate('HomeScreenTabs', { screen: 'Home' })
          }
        />
        <DrawerItem
          label="Workspace"
          onPress={() =>
            props.navigation.navigate('Workspace', { screen: 'Workspace' })
          }
        />
      </DrawerContentScrollView>
    );
  }

  return (
    <Drawer.Navigator
      screenOptions={{
        sceneStyle: { backgroundColor: 'transparent' },
        headerTintColor: '#fff',
        headerShadowVisible: false,
        title: false,
        headerRight: () => <HeaderNotificationUser />,
        headerLeft: () => <DrawerButton />,
      }}
      drawerContent={props => <CustomDrawerContent {...props} />}
    >
      <Drawer.Screen
        name="HomeScreenTabs"
        component={BottomTabNavigator}
        options={({ route }) => {
          const routeName = getFocusedRouteNameFromRoute(route) ?? 'Home';

          // Default header style
          let headerStyle = {
            backgroundColor: '#2860E7',
            borderBottomRightRadius: 14,
            borderBottomLeftRadius: 14,
          };

          // Remove radius only for Home
          if (routeName === 'Home') {
            headerStyle = {
              backgroundColor: '#2860E7',
              borderBottomLeftRadius: 0,
              borderBottomRightRadius: 0,
            };
          }

          return {
            headerStyle,
            headerTitle: routeName,
          };
        }}
      />
      <Drawer.Screen
        name="Workspace"
        component={MyWorkSpace}
        options={{
          headerStyle: { backgroundColor: '#2860E7' },
        }}
      />
      <Drawer.Screen
        name="DetailScreen"
        component={DetailScreen}
        options={{
          headerStyle: { backgroundColor: '#2860E7' },
        }}
      />
    </Drawer.Navigator>
  );
};

export default RootScreen;
