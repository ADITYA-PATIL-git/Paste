import React, { useState, useEffect } from 'react';
import { View, TextInput, FlatList, Image, TouchableOpacity, ActivityIndicator, StyleSheet } from 'react-native';
import debounce from 'lodash.debounce';

export default function SearchScreen({ navigation }) {
  const [query, setQuery] = useState('');
  const [results, setResults] = useState([]);
  const [loading, setLoading] = useState(false);

  const searchManga = async (q) => {
    if (!q.trim()) return;
    setLoading(true);
    try {
      const response = await fetch(`https://your-manga-api/search?query=${encodeURIComponent(q)}`);
      const data = await response.json();
      setResults(data.results || []); // Adjust based on your API response shape
    } catch (err) {
      console.error('Search error:', err);
    } finally {
      setLoading(false);
    }
  };

  // Debounce search to wait until user stops typing
  const debouncedSearch = debounce(searchManga, 500);

  useEffect(() => {
    if (query.length > 2) debouncedSearch(query);
  }, [query]);

  return (
    <View style={styles.container}>
      <TextInput
        style={styles.input}
        placeholder="Search manga..."
        value={query}
        onChangeText={setQuery}
        autoFocus
      />

      {loading ? (
        <ActivityIndicator size="large" />
      ) : (
        <FlatList
          data={results}
          numColumns={3}
          keyExtractor={(item, index) => item.id?.toString() || index.toString()}
          renderItem={({ item }) => (
            <TouchableOpacity
              onPress={() => navigation.navigate('MangaDetail', { id: item.id })}
              style={styles.card}
            >
              <Image
                source={{ uri: item.image }}
                style={styles.image}
                resizeMode="cover"
              />
            </TouchableOpacity>
          )}
        />
      )}
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 10, backgroundColor: '#fff' },
  input: {
    backgroundColor: '#eee',
    borderRadius: 8,
    padding: 10,
    marginBottom: 10,
  },
  card: { flex: 1 / 3, aspectRatio: 0.7, margin: 5 },
  image: { width: '100%', height: '100%', borderRadius: 6 },
});