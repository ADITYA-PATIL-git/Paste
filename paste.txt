import React from 'react';
import { View, Image, Text, StyleSheet } from 'react-native';

const OverlappingAvatars = ({
  images = [],        // default to empty array to avoid .map error
  count = 0,          // number for last circle (e.g. +5)
  totalToShow = 5,    // total circles including the last "count" one
  size = 100,         // diameter of each circle
  overlap = 0.35,     // portion to overlap (0.35 => 35% overlap)
}) => {
  // Number of image circles before the final count circle
  const imageCount = Math.max(0, totalToShow - 1);
  // Ensure we only use available images (slice prevents undefined)
  const imagesToRender = Array.isArray(images) ? images.slice(0, imageCount) : [];

  const negativeMargin = -Math.round(size * overlap);

  return (
    <View style={styles.row}>
      {imagesToRender.map((uri, idx) => (
        <View
          key={`avatar-${idx}`}
          style={[
            styles.circle,
            {
              width: size,
              height: size,
              borderRadius: size / 2,
              marginLeft: idx === 0 ? 0 : negativeMargin,
            },
          ]}
        >
          <Image source={{ uri }} style={styles.image} />
        </View>
      ))}

      {/* final count circle */}
      <View
        key="avatar-count"
        style={[
          styles.circle,
          {
            width: size,
            height: size,
            borderRadius: size / 2,
            marginLeft: imagesToRender.length === 0 ? 0 : negativeMargin,
            backgroundColor: '#888',
          },
        ]}
      >
        <Text style={[styles.countText, { fontSize: Math.round(size * 0.28) }]}>
          +{count}
        </Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  row: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  circle: {
    overflow: 'hidden',
    borderWidth: 2,
    borderColor: '#fff',
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#ccc',
    elevation: 3, // android shadow
    shadowColor: '#000',
    shadowOpacity: 0.15,
    shadowOffset: { width: 0, height: 1 },
    shadowRadius: 2,
  },
  image: {
    width: '100%',
    height: '100%',
    resizeMode: 'cover',
  },
  countText: {
    color: '#fff',
    fontWeight: '700',
  },
});

export default OverlappingAvatars;