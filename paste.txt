import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import MaterialIcons from '@react-native-vector-icons/material-icons';
import DropdownFlatlist from '../components/Paste_component';

const CustomCalendar = ({
  months,
  years,
  currentMonth,
  currentYear,
  selectedDate,
  today,
  onPrevMonth,
  onNextMonth,
  onMonthSelect,
  onYearSelect,
  onDateSelect,
  getDaysInMonth,
  getFirstDayOfMonth,
}) => {
  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

  const renderCalendarDays = () => {
    const totalDays = getDaysInMonth(currentMonth, currentYear);
    const firstDay = getFirstDayOfMonth(currentMonth, currentYear);
    const days = [];

    for (let i = 0; i < firstDay; i++) {
      days.push(<View key={`empty-${i}`} style={styles.dayCell} />);
    }

    for (let day = 1; day <= totalDays; day++) {
      const isToday =
        day === today.getDate() &&
        currentMonth === today.getMonth() &&
        currentYear === today.getFullYear();

      const isSelected =
        selectedDate === `${day}-${months[currentMonth]}-${currentYear}`;

      days.push(
        <TouchableOpacity
          key={day}
          style={[
            styles.dayCell,
            isToday && styles.today,
            isSelected && styles.selectedDay,
          ]}
          onPress={() => onDateSelect(day)}
        >
          <View style={{ flexDirection: 'column', alignItems: 'center' }}>
            <Text style={[styles.dayText, isToday && styles.todayText]}>
              {day}
            </Text>
            <View style={{ flexDirection: 'row', marginTop: 6 }}>
              <View
                style={{
                  height: 6,
                  width: 6,
                  backgroundColor: 'yellow',
                  borderRadius: 100,
                  marginRight: 5,
                }}
              />
              <View
                style={{
                  height: 6,
                  width: 6,
                  backgroundColor: 'green',
                  borderRadius: 100,
                }}
              />
            </View>
          </View>
        </TouchableOpacity>
      );
    }

    return days;
  };

  return (
    <View style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <MaterialIcons name="arrow-back-ios" color="#000" size={24} onPress={onPrevMonth} />

        <View style={{ flexDirection: 'row' }}>
          <DropdownFlatlist
            defaultValue={months[currentMonth]}
            options={months}
            onSelect={onMonthSelect}
          />
          <DropdownFlatlist
            defaultValue={currentYear.toString()}
            options={years}
            onSelect={onYearSelect}
          />
        </View>

        <MaterialIcons name="arrow-forward-ios" color="#000" size={24} onPress={onNextMonth} />
      </View>

      {/* Days of the week */}
      <View style={styles.weekRow}>
        {daysOfWeek.map((day, index) => (
          <Text key={index} style={styles.weekDay}>
            {day}
          </Text>
        ))}
      </View>

      {/* Calendar grid */}
      <View style={styles.daysGrid}>{renderCalendarDays()}</View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: { height: '66%', marginBottom: 0 },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 20,
  },
  weekRow: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    paddingHorizontal: 8,
    paddingBottom: 6,
  },
  weekDay: { flex: 1, textAlign: 'center', color: '#555' },
  daysGrid: { flexDirection: 'row', flexWrap: 'wrap', paddingHorizontal: 8 },
  dayCell: {
    width: '14.28%',
    aspectRatio: 1,
    justifyContent: 'center',
    alignItems: 'center',
    marginVertical: 8,
  },
  dayText: { fontSize: 13 },
  todayText: { color: '#007bff', fontWeight: 'bold' },
  selectedDay: {
    borderColor: '#007bff',
    borderWidth: 2,
    borderRadius: 100,
  },
});

export default CustomCalendar;
